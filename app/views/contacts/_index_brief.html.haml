- object = defined?(object) ? object : nil
- registration = (object.present? && object.class == Event) ? object.registrations.find_by_contact_id(contact.id) : nil
%li.highlight[contact]
  = avatar_for(contact, :size => "16x16")

  %ul.tools
    = hook(:contact_tools_before, self, :contact => contact)

    - if !shown_on_landing_page?
      %li= link_to_graduate(contact)
    
    - if registration.present? && can?(:update, registration)
      - if object.try(&:class) == Event
        %li= link_to_edit(registration, :edit_text => "Edit registration")
    
    - if can?(:update, contact)
      - unless (object.present? && object.try(&:class) == Event)
        %li= link_to_edit(contact)

    - if shown_on_landing_page?
      - discard_text = (object.try(&:class) == Event ? "Unregister" : "Discard")
      %li= link_to_discard(contact, discard_text)


    - if can?(:destroy, contact)
      %li= link_to_confirm(contact)

  .indentnone
    = link_to_if can?(:read, contact), contact.full_name(@current_user.preference[:contacts_naming]), contact
    %tt
      = brief_account_info(contact)
      
      - if contact.has_subscription?
        |
        = image_tag "/assets/sub-ad.png", :size => "14x11" if contact.cf_weekly_emails.include? "Adelaide"
        = image_tag "/assets/sub-cw.png", :size => "14x11" if contact.cf_weekly_emails.include? "City West"
        = image_tag "/assets/sub-ce.png", :size => "14x11" if contact.cf_weekly_emails.include? "City East"
        = image_tag "/assets/sub-tt.png", :size => "14x11" if contact.cf_supporter_emails.include? "TT Email"
        = image_tag "/assets/sub-ttm.png", :size => "14x11" if contact.cf_supporter_emails.include? "TT Mail"
        = image_tag "/assets/sub-pp.png", :size => "14x11" if contact.cf_supporter_emails.include? "Prayer Points"
      
      - if (lead = contact.lead) and lead.referred_by?
        &ndash;
        == #{t :referred_by_small} #{lead.referred_by}

    = hook(:contact_bottom, self, :contact => contact)
= draggable_element(dom_id(contact), :revert => true, :handle => "'gravatar'", :scroll => "window")