%li.highlight[contact]
  = avatar_for(contact, :size => "38x38", class: "gravatar img-circle")

  / .btn-group.tool-button
  /   %button.btn.btn-sm.btn-default.dropdown-toggle{type: "button", data: {toggle: "dropdown"} }
  /     %i.fa.fa-caret-down
  /   %ul.dropdown-menu.pull-right{role: "menu"}
  /
  /     = hook(:contact_tools_before, self, :contact => contact)
  /
  /     - if can?(:update, contact)
  /       %li= link_to_edit(contact)
  /
  /     - if shown_on_landing_page?
  /       %li= link_to_discard(contact)
  /
  /     - if can?(:destroy, contact)
  /       %li= link_to_delete(contact)

  .indent
    = link_to_if can?(:read, contact), contact.full_name(@current_user.preference[:contacts_naming]), contact, {remote: true}
    %tt
      = brief_account_info(contact)

      - if (lead = contact.lead) and lead.referred_by?
        &ndash;
        == #{t :referred_by_small} #{lead.referred_by}

    %dt{ :style => "padding: 2px 0px 0px 0px" }
      - if can?(:read, contact)
        - if contact.email.present?
          %i.fa.fa-envelope-o{style: "margin-left:0"}
          = link_to_email(contact.email)
          = " "
        - if contact.phone.present?
          %i.fa.fa-phone
          = contact.phone
          =" "
        - if contact.mobile.present?
          %i.fa.fa-mobile
          = contact.mobile
          
      =# t(:added_ago, value: timeago(contact.created_at)).html_safe

    - if contact.tag_list.present?
      %dt
        .tags= tags_for_index(contact)

    = hook(:contact_bottom, self, :contact => contact)
